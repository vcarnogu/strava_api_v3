/*
 * Strava API v3
 * The [Swagger Playground](https://developers.strava.com/playground) is the easiest way to familiarize yourself with the Strava API by submitting HTTP requests and observing the responses before you write any client code. It will show what a response will look like with different endpoints depending on the authorization scope you receive from your athletes. To use the Playground, go to https://www.strava.com/settings/api and change your “Authorization Callback Domain” to developers.strava.com. Please note, we only support Swagger 2.0. There is a known issue where you can only select one scope at a time. For more information, please check the section “client code” at https://developers.strava.com/docs.
 *
 * OpenAPI spec version: 3.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.26
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.StravaApiV3);
  }
}(this, function(expect, StravaApiV3) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('DetailedClub', function() {
      beforeEach(function() {
        instance = new StravaApiV3.DetailedClub();
      });

      it('should create an instance of DetailedClub', function() {
        // TODO: update the code to test DetailedClub
        expect(instance).to.be.a(StravaApiV3.DetailedClub);
      });

      it('should have the property membership (base name: "membership")', function() {
        // TODO: update the code to test the property membership
        expect(instance).to.have.property('membership');
        // expect(instance.membership).to.be(expectedValueLiteral);
      });

      it('should have the property admin (base name: "admin")', function() {
        // TODO: update the code to test the property admin
        expect(instance).to.have.property('admin');
        // expect(instance.admin).to.be(expectedValueLiteral);
      });

      it('should have the property owner (base name: "owner")', function() {
        // TODO: update the code to test the property owner
        expect(instance).to.have.property('owner');
        // expect(instance.owner).to.be(expectedValueLiteral);
      });

      it('should have the property followingCount (base name: "following_count")', function() {
        // TODO: update the code to test the property followingCount
        expect(instance).to.have.property('followingCount');
        // expect(instance.followingCount).to.be(expectedValueLiteral);
      });

    });
  });

}));
